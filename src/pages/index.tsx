import { type Question } from "@prisma/client";
import Head from "next/head";
import { useState } from "react";

import { api } from "~/utils/api";

export default function Home() {
  const questionsResult = api.question.questions.useQuery(undefined, {
    refetchInterval: 3000,
  });
  const refetchQuestons = questionsResult.refetch;
  const { mutateAsync } = api.question.createQuestion.useMutation();

  const data = questionsResult.data ?? ([] as Question[]);

  const [nameInput, setNameInput] = useState("");
  const [questionContentInput, setQuestionContentInput] = useState("");

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b">
        {/* List */}

        <section>
          {data.map((question) => (
            <div key={question.id}>
              <h1>{question.username}</h1>
              <p>{question.questionContent}</p>
            </div>
          ))}
        </section>

        {/* Form */}
        <form
          id="list"
          className="w-72 bg-slate-700 p-11 text-white"
          onSubmit={(e) => {
            e.preventDefault();
            mutateAsync({
              username: nameInput,
              questionContent: questionContentInput,
            })
              .then(() => refetchQuestons())
              .catch(console.error);
          }}
        >
          <h3 className="fot-bold text-white">What do you wanna ask Jon?</h3>
          <div className="h-1 w-full bg-white"></div>
          <div className="flex w-full flex-col">
            <label htmlFor="">username: </label>
            <input
              type="text"
              placeholder="name"
              className="w-full pl-3 text-black"
              onChange={(e) => {
                setNameInput(e.target.value);
              }}
              value={nameInput}
            />
          </div>
          <div className="flex w-full flex-col">
            <label htmlFor="">question: </label>
            <textarea
              placeholder="name"
              className="w-full pl-3 text-black"
              onChange={(e) => {
                setQuestionContentInput(e.target.value);
              }}
              value={questionContentInput}
            />
          </div>
          <input
            type="submit"
            value="Submit"
            className="bg-white p-2 text-black"
          />
        </form>
      </main>
    </>
  );
}
